#Generated by VisualGDB project wizard. 
#Note: VisualGDB will automatically update this file when you add new sources to the project.
#All other changes you make in this file will be preserved.
#Visit http://visualgdb.com/makefiles for more details

#VisualGDB: AutoSourceFiles		#<--- remove this line to disable auto-updating of SOURCEFILES and EXTERNAL_LIBS

TARGETNAME := ChibiOSF4.elf
#TARGETTYPE can be APP, STATIC or SHARED
TARGETTYPE := APP

to_lowercase = $(subst A,a,$(subst B,b,$(subst C,c,$(subst D,d,$(subst E,e,$(subst F,f,$(subst G,g,$(subst H,h,$(subst I,i,$(subst J,j,$(subst K,k,$(subst L,l,$(subst M,m,$(subst N,n,$(subst O,o,$(subst P,p,$(subst Q,q,$(subst R,r,$(subst S,s,$(subst T,t,$(subst U,u,$(subst V,v,$(subst W,w,$(subst X,x,$(subst Y,y,$(subst Z,z,$1))))))))))))))))))))))))))

CONFIG ?= DEBUG

CONFIGURATION_FLAGS_FILE := $(call to_lowercase,$(CONFIG)).mak

include $(CONFIGURATION_FLAGS_FILE)

#LINKER_SCRIPT defined inside the configuration file (e.g. debug.mak) should override any linker scripts defined in shared .mak files
CONFIGURATION_LINKER_SCRIPT := $(LINKER_SCRIPT)

include $(ADDITIONAL_MAKE_FILES)

ifneq ($(CONFIGURATION_LINKER_SCRIPT),)
LINKER_SCRIPT := $(CONFIGURATION_LINKER_SCRIPT)
endif

ifneq ($(LINKER_SCRIPT),)
LDFLAGS += -T$(LINKER_SCRIPT)
endif

ifeq ($(BINARYDIR),)
error:
	$(error Invalid configuration, please check your inputs)
endif

SOURCEFILES := Apps/Modbus/ModbusDevice.cpp Apps/Modbus/ModbusServer.cpp Apps/Modbus/RawModbusServer.cpp Apps/Modbus/TcpModbusServer.cpp board.c ChibiOS/hal/ports/STM32/LLD/CRCv1/hal_crc_lld.c ChibiOS/hal/src/hal_community.c ChibiOS/hal/src/hal_crc.c ChibiOS/various/crcsw.c ChibiOS/various/lwip_bindings/arch/sys_arch.c Core/BaseDynamicThread.cpp Core/ByteRingBuffer.cpp Core/CCMemoryAllocator.cpp Core/CCMemoryHeap.cpp Core/CpuUsageMonitor.cpp Core/DateTimeService.cpp Core/IODevice.cpp Core/NewDelete.cpp Core/Object.cpp Core/ObjectMemoryUtilizer.cpp Core/RtcBackupRegisters.cpp Crc32HW.cpp Drivers/Interfaces/Rs485.cpp Drivers/Interfaces/SharedRs485.cpp Drivers/Interfaces/Usart.cpp Drivers/Interfaces/UsartBasedDevice.cpp Drivers/LogicOutput.cpp Drivers/Network/Ethernet/EthernetThread.cpp Drivers/Network/SimGsm/SimGsmModem.cpp Drivers/Network/SimGsm/SimGsmATResponseParsers.cpp Drivers/Network/SimGsm/SimGsmPppModem.cpp Drivers/Network/SimGsm/SimGsmSocketBase.cpp Drivers/Network/SimGsm/SimGsmTcpServer.cpp Drivers/Network/SimGsm/SimGsmTcpSocket.cpp Drivers/Network/SimGsm/SimGsmUdpSocket.cpp Drivers/Sensors/AbstractSensor.cpp Drivers/Sensors/CE301Sensor.cpp Drivers/Sensors/TestSensorA.cpp Drivers/Sensors/TestSensorB.cpp Drivers/Sensors/TestSRSensorA.cpp Lib/fatfs/src/ff.c Lib/fatfs/src/ffunicode.c Lib/modbus/ModbusIP.cpp Lib/sha1/_Sha1.cpp Lib/tinyxml2/tinyxml2.cpp main.cpp MarvieDevice.cpp MarviePlatform.cpp MarvieXmlConfigParsers.cpp MLinkServer.cpp NetworkSensorReader.cpp Network/AbstractPppModem.cpp Network/Modem.cpp Network/AbstractTcpSocket.cpp Network/AbstractUdpSocket.cpp Network/IpAddress.cpp Network/LwipSocketPrivate.cpp Network/TcpServer.cpp Network/TcpSocket.cpp Network/UdpSocket.cpp SensorService/CE301Type.cpp SensorService/SensorService.cpp SensorService/TestSensorAType.cpp SensorService/TestSensorBType.cpp SensorService/TestSRSensorAType.cpp SingleBRSensorReader.cpp BRSensorReader.cpp MultipleBRSensorsReader.cpp Support/LexicalAnalyzer.cpp Support/Utility.cpp ChibiOS/common/oslib/src/chfactory.c ChibiOS/common/oslib/src/chheap.c ChibiOS/common/oslib/src/chmboxes.c ChibiOS/common/oslib/src/chmemcore.c ChibiOS/common/oslib/src/chmempools.c ChibiOS/common/ports/ARMCMx/chcore.c ChibiOS/common/ports/ARMCMx/chcore_v7m.c ChibiOS/common/ports/ARMCMx/compilers/GCC/chcoreasm_v7m.S ChibiOS/common/startup/ARMCMx/compilers/GCC/crt0_v7m.S ChibiOS/common/startup/ARMCMx/compilers/GCC/crt1.c ChibiOS/common/startup/ARMCMx/compilers/GCC/vectors.S ChibiOS/hal/lib/streams/chprintf.c ChibiOS/hal/lib/streams/memstreams.c ChibiOS/hal/lib/streams/nullstreams.c ChibiOS/hal/osal/rt/osal.c ChibiOS/hal/ports/common/ARMCMx/nvic.c ChibiOS/hal/ports/STM32/LLD/ADCv2/hal_adc_lld.c ChibiOS/hal/ports/STM32/LLD/CANv1/hal_can_lld.c ChibiOS/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ChibiOS/hal/ports/STM32/LLD/DMAv2/stm32_dma.c ChibiOS/hal/ports/STM32/LLD/EXTIv1/hal_ext_lld.c ChibiOS/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.c ChibiOS/hal/ports/STM32/LLD/I2Cv1/hal_i2c_lld.c ChibiOS/hal/ports/STM32/LLD/MACv1/hal_mac_lld.c ChibiOS/hal/ports/STM32/LLD/OTGv1/hal_usb_lld.c ChibiOS/hal/ports/STM32/LLD/OTGv1/hal_usb_lld_alt.c ChibiOS/hal/ports/STM32/LLD/QUADSPIv1/hal_qspi_lld.c ChibiOS/hal/ports/STM32/LLD/RTCv2/hal_rtc_lld.c ChibiOS/hal/ports/STM32/LLD/SDIOv1/hal_sdc_lld.c ChibiOS/hal/ports/STM32/LLD/SPIv1/hal_i2s_lld.c ChibiOS/hal/ports/STM32/LLD/SPIv1/hal_spi_lld.c ChibiOS/hal/ports/STM32/LLD/TIMv1/hal_gpt_lld.c ChibiOS/hal/ports/STM32/LLD/TIMv1/hal_icu_lld.c ChibiOS/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.c ChibiOS/hal/ports/STM32/LLD/TIMv1/hal_st_lld.c ChibiOS/hal/ports/STM32/LLD/USARTv1/hal_serial_lld.c ChibiOS/hal/ports/STM32/LLD/USARTv1/hal_uart_lld.c ChibiOS/hal/ports/STM32/LLD/xWDGv1/hal_wdg_lld.c ChibiOS/hal/ports/STM32/STM32F4xx/hal_lld.c ChibiOS/hal/ports/STM32/STM32F4xx/stm32_isr.c ChibiOS/hal/src/hal.c ChibiOS/hal/src/hal_adc.c ChibiOS/hal/src/hal_buffers.c ChibiOS/hal/src/hal_can.c ChibiOS/hal/src/hal_crypto.c ChibiOS/hal/src/hal_dac.c ChibiOS/hal/src/hal_ext.c ChibiOS/hal/src/hal_gpt.c ChibiOS/hal/src/hal_i2c.c ChibiOS/hal/src/hal_i2s.c ChibiOS/hal/src/hal_icu.c ChibiOS/hal/src/hal_mac.c ChibiOS/hal/src/hal_mmcsd.c ChibiOS/hal/src/hal_mmc_spi.c ChibiOS/hal/src/hal_pal.c ChibiOS/hal/src/hal_pwm.c ChibiOS/hal/src/hal_qspi.c ChibiOS/hal/src/hal_queues.c ChibiOS/hal/src/hal_rtc.c ChibiOS/hal/src/hal_sdc.c ChibiOS/hal/src/hal_serial.c ChibiOS/hal/src/hal_serial_usb.c ChibiOS/hal/src/hal_spi.c ChibiOS/hal/src/hal_st.c ChibiOS/hal/src/hal_uart.c ChibiOS/hal/src/hal_usb.c ChibiOS/hal/src/hal_wdg.c ChibiOS/rt/src/chcond.c ChibiOS/rt/src/chdebug.c ChibiOS/rt/src/chdynamic.c ChibiOS/rt/src/chevents.c ChibiOS/rt/src/chmsg.c ChibiOS/rt/src/chmtx.c ChibiOS/rt/src/chregistry.c ChibiOS/rt/src/chschd.c ChibiOS/rt/src/chsem.c ChibiOS/rt/src/chstats.c ChibiOS/rt/src/chsys.c ChibiOS/rt/src/chthreads.c ChibiOS/rt/src/chtm.c ChibiOS/rt/src/chtrace.c ChibiOS/rt/src/chvt.c ChibiOS/test/lib/ch_test.c ChibiOS/test/oslib/source/test/oslib_test_root.c ChibiOS/test/oslib/source/test/oslib_test_sequence_001.c ChibiOS/test/oslib/source/test/oslib_test_sequence_002.c ChibiOS/test/oslib/source/test/oslib_test_sequence_003.c ChibiOS/test/oslib/source/test/oslib_test_sequence_004.c ChibiOS/test/rt/source/test/rt_test_root.c ChibiOS/test/rt/source/test/rt_test_sequence_001.c ChibiOS/test/rt/source/test/rt_test_sequence_002.c ChibiOS/test/rt/source/test/rt_test_sequence_003.c ChibiOS/test/rt/source/test/rt_test_sequence_004.c ChibiOS/test/rt/source/test/rt_test_sequence_005.c ChibiOS/test/rt/source/test/rt_test_sequence_006.c ChibiOS/test/rt/source/test/rt_test_sequence_007.c ChibiOS/test/rt/source/test/rt_test_sequence_008.c ChibiOS/test/rt/source/test/rt_test_sequence_009.c ChibiOS/test/rt/source/test/rt_test_sequence_010.c ChibiOS/various/evtimer.c ChibiOS/various/cpp_wrappers/ch.cpp ChibiOS/various/fatfs_bindings/fatfs_diskio.c ChibiOS/various/fatfs_bindings/fatfs_syscall.c Tests/UdpStressTestServer/UdpStressTestServer.cpp Lib/lwip/src/api/api_lib.c Lib/lwip/src/api/api_msg.c Lib/lwip/src/api/err.c Lib/lwip/src/api/netbuf.c Lib/lwip/src/api/netdb.c Lib/lwip/src/api/netifapi.c Lib/lwip/src/api/sockets.c Lib/lwip/src/api/tcpip.c Lib/lwip/src/apps/httpd/fs.c Lib/lwip/src/apps/httpd/fsdata.c Lib/lwip/src/apps/httpd/httpd.c Lib/lwip/src/apps/lwiperf/lwiperf.c Lib/lwip/src/apps/mdns/mdns.c Lib/lwip/src/apps/mqtt/mqtt.c Lib/lwip/src/apps/netbiosns/netbiosns.c Lib/lwip/src/apps/snmp/snmpv3.c Lib/lwip/src/apps/snmp/snmpv3_dummy.c Lib/lwip/src/apps/snmp/snmpv3_mbedtls.c Lib/lwip/src/apps/snmp/snmp_asn1.c Lib/lwip/src/apps/snmp/snmp_core.c Lib/lwip/src/apps/snmp/snmp_mib2.c Lib/lwip/src/apps/snmp/snmp_mib2_icmp.c Lib/lwip/src/apps/snmp/snmp_mib2_interfaces.c Lib/lwip/src/apps/snmp/snmp_mib2_ip.c Lib/lwip/src/apps/snmp/snmp_mib2_snmp.c Lib/lwip/src/apps/snmp/snmp_mib2_system.c Lib/lwip/src/apps/snmp/snmp_mib2_tcp.c Lib/lwip/src/apps/snmp/snmp_mib2_udp.c Lib/lwip/src/apps/snmp/snmp_msg.c Lib/lwip/src/apps/snmp/snmp_netconn.c Lib/lwip/src/apps/snmp/snmp_pbuf_stream.c Lib/lwip/src/apps/snmp/snmp_raw.c Lib/lwip/src/apps/snmp/snmp_scalar.c Lib/lwip/src/apps/snmp/snmp_table.c Lib/lwip/src/apps/snmp/snmp_threadsync.c Lib/lwip/src/apps/snmp/snmp_traps.c Lib/lwip/src/apps/sntp/sntp.c Lib/lwip/src/apps/tftp/tftp_server.c Lib/lwip/src/core/def.c Lib/lwip/src/core/dns.c Lib/lwip/src/core/inet_chksum.c Lib/lwip/src/core/init.c Lib/lwip/src/core/ip.c Lib/lwip/src/core/mem.c Lib/lwip/src/core/memp.c Lib/lwip/src/core/netif.c Lib/lwip/src/core/pbuf.c Lib/lwip/src/core/raw.c Lib/lwip/src/core/stats.c Lib/lwip/src/core/sys.c Lib/lwip/src/core/tcp.c Lib/lwip/src/core/tcp_in.c Lib/lwip/src/core/tcp_out.c Lib/lwip/src/core/timeouts.c Lib/lwip/src/core/udp.c Lib/lwip/src/core/ipv4/autoip.c Lib/lwip/src/core/ipv4/dhcp.c Lib/lwip/src/core/ipv4/etharp.c Lib/lwip/src/core/ipv4/icmp.c Lib/lwip/src/core/ipv4/igmp.c Lib/lwip/src/core/ipv4/ip4.c Lib/lwip/src/core/ipv4/ip4_addr.c Lib/lwip/src/core/ipv4/ip4_frag.c Lib/lwip/src/core/ipv6/dhcp6.c Lib/lwip/src/core/ipv6/ethip6.c Lib/lwip/src/core/ipv6/icmp6.c Lib/lwip/src/core/ipv6/inet6.c Lib/lwip/src/core/ipv6/ip6.c Lib/lwip/src/core/ipv6/ip6_addr.c Lib/lwip/src/core/ipv6/ip6_frag.c Lib/lwip/src/core/ipv6/mld6.c Lib/lwip/src/core/ipv6/nd6.c Lib/lwip/src/netif/ethernet.c Lib/lwip/src/netif/ethernetif.c Lib/lwip/src/netif/lowpan6.c Lib/lwip/src/netif/slipif.c Lib/lwip/src/netif/ppp/auth.c Lib/lwip/src/netif/ppp/ccp.c Lib/lwip/src/netif/ppp/chap-md5.c Lib/lwip/src/netif/ppp/chap-new.c Lib/lwip/src/netif/ppp/chap_ms.c Lib/lwip/src/netif/ppp/demand.c Lib/lwip/src/netif/ppp/eap.c Lib/lwip/src/netif/ppp/ecp.c Lib/lwip/src/netif/ppp/eui64.c Lib/lwip/src/netif/ppp/fsm.c Lib/lwip/src/netif/ppp/ipcp.c Lib/lwip/src/netif/ppp/ipv6cp.c Lib/lwip/src/netif/ppp/lcp.c Lib/lwip/src/netif/ppp/magic.c Lib/lwip/src/netif/ppp/mppe.c Lib/lwip/src/netif/ppp/multilink.c Lib/lwip/src/netif/ppp/ppp.c Lib/lwip/src/netif/ppp/pppapi.c Lib/lwip/src/netif/ppp/pppcrypt.c Lib/lwip/src/netif/ppp/pppoe.c Lib/lwip/src/netif/ppp/pppol2tp.c Lib/lwip/src/netif/ppp/pppos.c Lib/lwip/src/netif/ppp/upap.c Lib/lwip/src/netif/ppp/utils.c Lib/lwip/src/netif/ppp/vj.c Lib/lwip/src/netif/ppp/polarssl/arc4.c Lib/lwip/src/netif/ppp/polarssl/des.c Lib/lwip/src/netif/ppp/polarssl/md4.c Lib/lwip/src/netif/ppp/polarssl/md5.c Lib/lwip/src/netif/ppp/polarssl/sha1.c Lib/modbus/ModbusASCII.cpp Lib/modbus/ModbusMaster.cpp Lib/modbus/ModbusMasterHandlerHolding.cpp Lib/modbus/ModbusRTU.cpp Lib/modbus/ModbusSlave.cpp Lib/modbus/ModbusSlaveHandlerHolding.cpp
EXTERNAL_LIBS := 
EXTERNAL_LIBS_COPIED := $(foreach lib, $(EXTERNAL_LIBS),$(BINARYDIR)/$(notdir $(lib)))

CFLAGS += $(COMMONFLAGS)
CXXFLAGS += $(COMMONFLAGS)
ASFLAGS += $(COMMONFLAGS)
LDFLAGS += $(COMMONFLAGS)

CFLAGS += $(addprefix -I,$(INCLUDE_DIRS))
CXXFLAGS += $(addprefix -I,$(INCLUDE_DIRS))

CFLAGS += $(addprefix -D,$(PREPROCESSOR_MACROS))
CXXFLAGS += $(addprefix -D,$(PREPROCESSOR_MACROS))
ASFLAGS += $(addprefix -D,$(PREPROCESSOR_MACROS))

CXXFLAGS += $(addprefix -framework ,$(MACOS_FRAMEWORKS))
CFLAGS += $(addprefix -framework ,$(MACOS_FRAMEWORKS))
LDFLAGS += $(addprefix -framework ,$(MACOS_FRAMEWORKS))

LDFLAGS += $(addprefix -L,$(LIBRARY_DIRS))

ifeq ($(GENERATE_MAP_FILE),1)
LDFLAGS += -Wl,-Map=$(BINARYDIR)/$(basename $(TARGETNAME)).map
endif

LIBRARY_LDFLAGS = $(addprefix -l,$(LIBRARY_NAMES))

ifeq ($(IS_LINUX_PROJECT),1)
	RPATH_PREFIX := -Wl,--rpath='$$ORIGIN/../
	LIBRARY_LDFLAGS += $(EXTERNAL_LIBS)
	LIBRARY_LDFLAGS += -Wl,--rpath='$$ORIGIN'
	LIBRARY_LDFLAGS += $(addsuffix ',$(addprefix $(RPATH_PREFIX),$(dir $(EXTERNAL_LIBS))))
	
	ifeq ($(TARGETTYPE),SHARED)
		CFLAGS += -fPIC
		CXXFLAGS += -fPIC
		ASFLAGS += -fPIC
		LIBRARY_LDFLAGS += -Wl,-soname,$(TARGETNAME)
	endif
	
	ifneq ($(LINUX_PACKAGES),)
		PACKAGE_CFLAGS := $(foreach pkg,$(LINUX_PACKAGES),$(shell pkg-config --cflags $(pkg)))
		PACKAGE_LDFLAGS := $(foreach pkg,$(LINUX_PACKAGES),$(shell pkg-config --libs $(pkg)))
		CFLAGS += $(PACKAGE_CFLAGS)
		CXXFLAGS += $(PACKAGE_CFLAGS)
		LIBRARY_LDFLAGS += $(PACKAGE_LDFLAGS)
	endif	
else
	LIBRARY_LDFLAGS += $(EXTERNAL_LIBS)
endif

LIBRARY_LDFLAGS += $(ADDITIONAL_LINKER_INPUTS)

all_make_files := $(firstword $(MAKEFILE_LIST)) $(CONFIGURATION_FLAGS_FILE) $(ADDITIONAL_MAKE_FILES)

ifeq ($(STARTUPFILES),)
	all_source_files := $(SOURCEFILES)
else
	all_source_files := $(STARTUPFILES) $(filter-out $(STARTUPFILES),$(SOURCEFILES))
endif

source_obj1 := $(all_source_files:.cpp=.o)
source_obj2 := $(source_obj1:.c=.o)
source_obj3 := $(source_obj2:.s=.o)
source_obj4 := $(source_obj3:.S=.o)
source_obj5 := $(source_obj4:.cc=.o)
source_objs := $(source_obj5:.cxx=.o)

all_objs := $(addprefix $(BINARYDIR)/, $(notdir $(source_objs)))

PRIMARY_OUTPUTS :=

ifeq ($(GENERATE_BIN_FILE),1)
PRIMARY_OUTPUTS += $(BINARYDIR)/$(basename $(TARGETNAME)).bin
endif

ifeq ($(GENERATE_IHEX_FILE),1)
PRIMARY_OUTPUTS += $(BINARYDIR)/$(basename $(TARGETNAME)).ihex
endif

ifeq ($(PRIMARY_OUTPUTS),)
PRIMARY_OUTPUTS := $(BINARYDIR)/$(TARGETNAME)
endif

all: $(PRIMARY_OUTPUTS)

$(BINARYDIR)/$(basename $(TARGETNAME)).bin: $(BINARYDIR)/$(TARGETNAME)
	$(OBJCOPY) -O binary $< $@

$(BINARYDIR)/$(basename $(TARGETNAME)).ihex: $(BINARYDIR)/$(TARGETNAME)
	$(OBJCOPY) -O ihex $< $@
	
ifneq ($(LINKER_SCRIPT),)
$(BINARYDIR)/$(TARGETNAME): $(LINKER_SCRIPT)
endif

ifeq ($(TARGETTYPE),APP)
$(BINARYDIR)/$(TARGETNAME): $(all_objs) $(EXTERNAL_LIBS)
	$(LD) -o $@ $(LDFLAGS) $(START_GROUP) $(all_objs) $(LIBRARY_LDFLAGS) $(END_GROUP)
endif

ifeq ($(TARGETTYPE),SHARED)
$(BINARYDIR)/$(TARGETNAME): $(all_objs) $(EXTERNAL_LIBS)
	$(LD) -shared -o $@ $(LDFLAGS) $(START_GROUP) $(all_objs) $(LIBRARY_LDFLAGS) $(END_GROUP)
endif
	
ifeq ($(TARGETTYPE),STATIC)
$(BINARYDIR)/$(TARGETNAME): $(all_objs)
	$(AR) -r $@ $^
endif

-include $(all_objs:.o=.dep)

clean:
ifeq ($(USE_DEL_TO_CLEAN),1)
	cmd /C del /S /Q $(BINARYDIR)
else
	rm -rf $(BINARYDIR)
endif

$(BINARYDIR):
	mkdir $(BINARYDIR)

#VisualGDB: FileSpecificTemplates		#<--- VisualGDB will use the following lines to define rules for source files in subdirectories
$(BINARYDIR)/%.o : %.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)

$(BINARYDIR)/%.o : %.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)

$(BINARYDIR)/%.o : %.S $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) $(ASFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)

$(BINARYDIR)/%.o : %.s $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) $(ASFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)

$(BINARYDIR)/%.o : %.cc $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)

$(BINARYDIR)/%.o : %.cxx $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)

#VisualGDB: GeneratedRules				#<--- All lines below are auto-generated. Remove this line to suppress auto-generation of file rules.


$(BINARYDIR)/ModbusDevice.o : Apps/Modbus/ModbusDevice.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ModbusServer.o : Apps/Modbus/ModbusServer.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/RawModbusServer.o : Apps/Modbus/RawModbusServer.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/TcpModbusServer.o : Apps/Modbus/TcpModbusServer.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_crc_lld.o : ChibiOS/hal/ports/STM32/LLD/CRCv1/hal_crc_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_community.o : ChibiOS/hal/src/hal_community.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_crc.o : ChibiOS/hal/src/hal_crc.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/crcsw.o : ChibiOS/various/crcsw.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/sys_arch.o : ChibiOS/various/lwip_bindings/arch/sys_arch.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/BaseDynamicThread.o : Core/BaseDynamicThread.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ByteRingBuffer.o : Core/ByteRingBuffer.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/CCMemoryAllocator.o : Core/CCMemoryAllocator.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/CCMemoryHeap.o : Core/CCMemoryHeap.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/CpuUsageMonitor.o : Core/CpuUsageMonitor.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/DateTimeService.o : Core/DateTimeService.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/IODevice.o : Core/IODevice.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/NewDelete.o : Core/NewDelete.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Object.o : Core/Object.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ObjectMemoryUtilizer.o : Core/ObjectMemoryUtilizer.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/RtcBackupRegisters.o : Core/RtcBackupRegisters.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Rs485.o : Drivers/Interfaces/Rs485.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/SharedRs485.o : Drivers/Interfaces/SharedRs485.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Usart.o : Drivers/Interfaces/Usart.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/UsartBasedDevice.o : Drivers/Interfaces/UsartBasedDevice.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/LogicOutput.o : Drivers/LogicOutput.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/EthernetThread.o : Drivers/Network/Ethernet/EthernetThread.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/SimGsmModem.o : Drivers/Network/SimGsm/SimGsmModem.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/SimGsmATResponseParsers.o : Drivers/Network/SimGsm/SimGsmATResponseParsers.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/SimGsmPppModem.o : Drivers/Network/SimGsm/SimGsmPppModem.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/SimGsmSocketBase.o : Drivers/Network/SimGsm/SimGsmSocketBase.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/SimGsmTcpServer.o : Drivers/Network/SimGsm/SimGsmTcpServer.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/SimGsmTcpSocket.o : Drivers/Network/SimGsm/SimGsmTcpSocket.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/SimGsmUdpSocket.o : Drivers/Network/SimGsm/SimGsmUdpSocket.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/AbstractSensor.o : Drivers/Sensors/AbstractSensor.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/CE301Sensor.o : Drivers/Sensors/CE301Sensor.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/TestSensorA.o : Drivers/Sensors/TestSensorA.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/TestSensorB.o : Drivers/Sensors/TestSensorB.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/TestSRSensorA.o : Drivers/Sensors/TestSRSensorA.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ff.o : Lib/fatfs/src/ff.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ffunicode.o : Lib/fatfs/src/ffunicode.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ModbusIP.o : Lib/modbus/ModbusIP.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/_Sha1.o : Lib/sha1/_Sha1.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/tinyxml2.o : Lib/tinyxml2/tinyxml2.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/AbstractPppModem.o : Network/AbstractPppModem.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Modem.o : Network/Modem.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/AbstractTcpSocket.o : Network/AbstractTcpSocket.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/AbstractUdpSocket.o : Network/AbstractUdpSocket.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/IpAddress.o : Network/IpAddress.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/LwipSocketPrivate.o : Network/LwipSocketPrivate.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/TcpServer.o : Network/TcpServer.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/TcpSocket.o : Network/TcpSocket.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/UdpSocket.o : Network/UdpSocket.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/CE301Type.o : SensorService/CE301Type.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/SensorService.o : SensorService/SensorService.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/TestSensorAType.o : SensorService/TestSensorAType.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/TestSensorBType.o : SensorService/TestSensorBType.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/TestSRSensorAType.o : SensorService/TestSRSensorAType.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/LexicalAnalyzer.o : Support/LexicalAnalyzer.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Utility.o : Support/Utility.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chfactory.o : ChibiOS/common/oslib/src/chfactory.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chheap.o : ChibiOS/common/oslib/src/chheap.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chmboxes.o : ChibiOS/common/oslib/src/chmboxes.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chmemcore.o : ChibiOS/common/oslib/src/chmemcore.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chmempools.o : ChibiOS/common/oslib/src/chmempools.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chcore.o : ChibiOS/common/ports/ARMCMx/chcore.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chcore_v7m.o : ChibiOS/common/ports/ARMCMx/chcore_v7m.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chcoreasm_v7m.o : ChibiOS/common/ports/ARMCMx/compilers/GCC/chcoreasm_v7m.S $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) $(ASFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/crt0_v7m.o : ChibiOS/common/startup/ARMCMx/compilers/GCC/crt0_v7m.S $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) $(ASFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/crt1.o : ChibiOS/common/startup/ARMCMx/compilers/GCC/crt1.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/vectors.o : ChibiOS/common/startup/ARMCMx/compilers/GCC/vectors.S $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) $(ASFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chprintf.o : ChibiOS/hal/lib/streams/chprintf.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/memstreams.o : ChibiOS/hal/lib/streams/memstreams.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/nullstreams.o : ChibiOS/hal/lib/streams/nullstreams.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/osal.o : ChibiOS/hal/osal/rt/osal.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/nvic.o : ChibiOS/hal/ports/common/ARMCMx/nvic.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_adc_lld.o : ChibiOS/hal/ports/STM32/LLD/ADCv2/hal_adc_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_can_lld.o : ChibiOS/hal/ports/STM32/LLD/CANv1/hal_can_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_dac_lld.o : ChibiOS/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/stm32_dma.o : ChibiOS/hal/ports/STM32/LLD/DMAv2/stm32_dma.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_ext_lld.o : ChibiOS/hal/ports/STM32/LLD/EXTIv1/hal_ext_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_pal_lld.o : ChibiOS/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_i2c_lld.o : ChibiOS/hal/ports/STM32/LLD/I2Cv1/hal_i2c_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_mac_lld.o : ChibiOS/hal/ports/STM32/LLD/MACv1/hal_mac_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_usb_lld.o : ChibiOS/hal/ports/STM32/LLD/OTGv1/hal_usb_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_usb_lld_alt.o : ChibiOS/hal/ports/STM32/LLD/OTGv1/hal_usb_lld_alt.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_qspi_lld.o : ChibiOS/hal/ports/STM32/LLD/QUADSPIv1/hal_qspi_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_rtc_lld.o : ChibiOS/hal/ports/STM32/LLD/RTCv2/hal_rtc_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_sdc_lld.o : ChibiOS/hal/ports/STM32/LLD/SDIOv1/hal_sdc_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_i2s_lld.o : ChibiOS/hal/ports/STM32/LLD/SPIv1/hal_i2s_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_spi_lld.o : ChibiOS/hal/ports/STM32/LLD/SPIv1/hal_spi_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_gpt_lld.o : ChibiOS/hal/ports/STM32/LLD/TIMv1/hal_gpt_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_icu_lld.o : ChibiOS/hal/ports/STM32/LLD/TIMv1/hal_icu_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_pwm_lld.o : ChibiOS/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_st_lld.o : ChibiOS/hal/ports/STM32/LLD/TIMv1/hal_st_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_serial_lld.o : ChibiOS/hal/ports/STM32/LLD/USARTv1/hal_serial_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_uart_lld.o : ChibiOS/hal/ports/STM32/LLD/USARTv1/hal_uart_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_wdg_lld.o : ChibiOS/hal/ports/STM32/LLD/xWDGv1/hal_wdg_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_lld.o : ChibiOS/hal/ports/STM32/STM32F4xx/hal_lld.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/stm32_isr.o : ChibiOS/hal/ports/STM32/STM32F4xx/stm32_isr.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal.o : ChibiOS/hal/src/hal.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_adc.o : ChibiOS/hal/src/hal_adc.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_buffers.o : ChibiOS/hal/src/hal_buffers.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_can.o : ChibiOS/hal/src/hal_can.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_crypto.o : ChibiOS/hal/src/hal_crypto.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_dac.o : ChibiOS/hal/src/hal_dac.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_ext.o : ChibiOS/hal/src/hal_ext.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_gpt.o : ChibiOS/hal/src/hal_gpt.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_i2c.o : ChibiOS/hal/src/hal_i2c.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_i2s.o : ChibiOS/hal/src/hal_i2s.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_icu.o : ChibiOS/hal/src/hal_icu.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_mac.o : ChibiOS/hal/src/hal_mac.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_mmcsd.o : ChibiOS/hal/src/hal_mmcsd.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_mmc_spi.o : ChibiOS/hal/src/hal_mmc_spi.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_pal.o : ChibiOS/hal/src/hal_pal.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_pwm.o : ChibiOS/hal/src/hal_pwm.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_qspi.o : ChibiOS/hal/src/hal_qspi.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_queues.o : ChibiOS/hal/src/hal_queues.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_rtc.o : ChibiOS/hal/src/hal_rtc.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_sdc.o : ChibiOS/hal/src/hal_sdc.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_serial.o : ChibiOS/hal/src/hal_serial.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_serial_usb.o : ChibiOS/hal/src/hal_serial_usb.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_spi.o : ChibiOS/hal/src/hal_spi.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_st.o : ChibiOS/hal/src/hal_st.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_uart.o : ChibiOS/hal/src/hal_uart.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_usb.o : ChibiOS/hal/src/hal_usb.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/hal_wdg.o : ChibiOS/hal/src/hal_wdg.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chcond.o : ChibiOS/rt/src/chcond.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chdebug.o : ChibiOS/rt/src/chdebug.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chdynamic.o : ChibiOS/rt/src/chdynamic.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chevents.o : ChibiOS/rt/src/chevents.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chmsg.o : ChibiOS/rt/src/chmsg.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chmtx.o : ChibiOS/rt/src/chmtx.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chregistry.o : ChibiOS/rt/src/chregistry.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chschd.o : ChibiOS/rt/src/chschd.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chsem.o : ChibiOS/rt/src/chsem.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chstats.o : ChibiOS/rt/src/chstats.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chsys.o : ChibiOS/rt/src/chsys.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chthreads.o : ChibiOS/rt/src/chthreads.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chtm.o : ChibiOS/rt/src/chtm.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chtrace.o : ChibiOS/rt/src/chtrace.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chvt.o : ChibiOS/rt/src/chvt.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ch_test.o : ChibiOS/test/lib/ch_test.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/oslib_test_root.o : ChibiOS/test/oslib/source/test/oslib_test_root.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/oslib_test_sequence_001.o : ChibiOS/test/oslib/source/test/oslib_test_sequence_001.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/oslib_test_sequence_002.o : ChibiOS/test/oslib/source/test/oslib_test_sequence_002.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/oslib_test_sequence_003.o : ChibiOS/test/oslib/source/test/oslib_test_sequence_003.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/oslib_test_sequence_004.o : ChibiOS/test/oslib/source/test/oslib_test_sequence_004.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/rt_test_root.o : ChibiOS/test/rt/source/test/rt_test_root.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/rt_test_sequence_001.o : ChibiOS/test/rt/source/test/rt_test_sequence_001.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/rt_test_sequence_002.o : ChibiOS/test/rt/source/test/rt_test_sequence_002.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/rt_test_sequence_003.o : ChibiOS/test/rt/source/test/rt_test_sequence_003.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/rt_test_sequence_004.o : ChibiOS/test/rt/source/test/rt_test_sequence_004.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/rt_test_sequence_005.o : ChibiOS/test/rt/source/test/rt_test_sequence_005.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/rt_test_sequence_006.o : ChibiOS/test/rt/source/test/rt_test_sequence_006.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/rt_test_sequence_007.o : ChibiOS/test/rt/source/test/rt_test_sequence_007.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/rt_test_sequence_008.o : ChibiOS/test/rt/source/test/rt_test_sequence_008.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/rt_test_sequence_009.o : ChibiOS/test/rt/source/test/rt_test_sequence_009.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/rt_test_sequence_010.o : ChibiOS/test/rt/source/test/rt_test_sequence_010.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/evtimer.o : ChibiOS/various/evtimer.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ch.o : ChibiOS/various/cpp_wrappers/ch.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/fatfs_diskio.o : ChibiOS/various/fatfs_bindings/fatfs_diskio.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/fatfs_syscall.o : ChibiOS/various/fatfs_bindings/fatfs_syscall.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/UdpStressTestServer.o : Tests/UdpStressTestServer/UdpStressTestServer.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/api_lib.o : Lib/lwip/src/api/api_lib.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/api_msg.o : Lib/lwip/src/api/api_msg.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/err.o : Lib/lwip/src/api/err.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/netbuf.o : Lib/lwip/src/api/netbuf.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/netdb.o : Lib/lwip/src/api/netdb.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/netifapi.o : Lib/lwip/src/api/netifapi.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/sockets.o : Lib/lwip/src/api/sockets.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/tcpip.o : Lib/lwip/src/api/tcpip.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/fs.o : Lib/lwip/src/apps/httpd/fs.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/fsdata.o : Lib/lwip/src/apps/httpd/fsdata.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/httpd.o : Lib/lwip/src/apps/httpd/httpd.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/lwiperf.o : Lib/lwip/src/apps/lwiperf/lwiperf.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/mdns.o : Lib/lwip/src/apps/mdns/mdns.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/mqtt.o : Lib/lwip/src/apps/mqtt/mqtt.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/netbiosns.o : Lib/lwip/src/apps/netbiosns/netbiosns.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmpv3.o : Lib/lwip/src/apps/snmp/snmpv3.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmpv3_dummy.o : Lib/lwip/src/apps/snmp/snmpv3_dummy.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmpv3_mbedtls.o : Lib/lwip/src/apps/snmp/snmpv3_mbedtls.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_asn1.o : Lib/lwip/src/apps/snmp/snmp_asn1.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_core.o : Lib/lwip/src/apps/snmp/snmp_core.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_mib2.o : Lib/lwip/src/apps/snmp/snmp_mib2.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_mib2_icmp.o : Lib/lwip/src/apps/snmp/snmp_mib2_icmp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_mib2_interfaces.o : Lib/lwip/src/apps/snmp/snmp_mib2_interfaces.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_mib2_ip.o : Lib/lwip/src/apps/snmp/snmp_mib2_ip.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_mib2_snmp.o : Lib/lwip/src/apps/snmp/snmp_mib2_snmp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_mib2_system.o : Lib/lwip/src/apps/snmp/snmp_mib2_system.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_mib2_tcp.o : Lib/lwip/src/apps/snmp/snmp_mib2_tcp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_mib2_udp.o : Lib/lwip/src/apps/snmp/snmp_mib2_udp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_msg.o : Lib/lwip/src/apps/snmp/snmp_msg.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_netconn.o : Lib/lwip/src/apps/snmp/snmp_netconn.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_pbuf_stream.o : Lib/lwip/src/apps/snmp/snmp_pbuf_stream.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_raw.o : Lib/lwip/src/apps/snmp/snmp_raw.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_scalar.o : Lib/lwip/src/apps/snmp/snmp_scalar.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_table.o : Lib/lwip/src/apps/snmp/snmp_table.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_threadsync.o : Lib/lwip/src/apps/snmp/snmp_threadsync.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/snmp_traps.o : Lib/lwip/src/apps/snmp/snmp_traps.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/sntp.o : Lib/lwip/src/apps/sntp/sntp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/tftp_server.o : Lib/lwip/src/apps/tftp/tftp_server.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/def.o : Lib/lwip/src/core/def.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/dns.o : Lib/lwip/src/core/dns.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/inet_chksum.o : Lib/lwip/src/core/inet_chksum.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/init.o : Lib/lwip/src/core/init.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ip.o : Lib/lwip/src/core/ip.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/mem.o : Lib/lwip/src/core/mem.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/memp.o : Lib/lwip/src/core/memp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/netif.o : Lib/lwip/src/core/netif.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/pbuf.o : Lib/lwip/src/core/pbuf.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/raw.o : Lib/lwip/src/core/raw.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/stats.o : Lib/lwip/src/core/stats.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/sys.o : Lib/lwip/src/core/sys.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/tcp.o : Lib/lwip/src/core/tcp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/tcp_in.o : Lib/lwip/src/core/tcp_in.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/tcp_out.o : Lib/lwip/src/core/tcp_out.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/timeouts.o : Lib/lwip/src/core/timeouts.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/udp.o : Lib/lwip/src/core/udp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/autoip.o : Lib/lwip/src/core/ipv4/autoip.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/dhcp.o : Lib/lwip/src/core/ipv4/dhcp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/etharp.o : Lib/lwip/src/core/ipv4/etharp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/icmp.o : Lib/lwip/src/core/ipv4/icmp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/igmp.o : Lib/lwip/src/core/ipv4/igmp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ip4.o : Lib/lwip/src/core/ipv4/ip4.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ip4_addr.o : Lib/lwip/src/core/ipv4/ip4_addr.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ip4_frag.o : Lib/lwip/src/core/ipv4/ip4_frag.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/dhcp6.o : Lib/lwip/src/core/ipv6/dhcp6.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ethip6.o : Lib/lwip/src/core/ipv6/ethip6.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/icmp6.o : Lib/lwip/src/core/ipv6/icmp6.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/inet6.o : Lib/lwip/src/core/ipv6/inet6.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ip6.o : Lib/lwip/src/core/ipv6/ip6.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ip6_addr.o : Lib/lwip/src/core/ipv6/ip6_addr.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ip6_frag.o : Lib/lwip/src/core/ipv6/ip6_frag.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/mld6.o : Lib/lwip/src/core/ipv6/mld6.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/nd6.o : Lib/lwip/src/core/ipv6/nd6.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ethernet.o : Lib/lwip/src/netif/ethernet.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ethernetif.o : Lib/lwip/src/netif/ethernetif.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/lowpan6.o : Lib/lwip/src/netif/lowpan6.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/slipif.o : Lib/lwip/src/netif/slipif.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/auth.o : Lib/lwip/src/netif/ppp/auth.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ccp.o : Lib/lwip/src/netif/ppp/ccp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chap-md5.o : Lib/lwip/src/netif/ppp/chap-md5.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chap-new.o : Lib/lwip/src/netif/ppp/chap-new.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/chap_ms.o : Lib/lwip/src/netif/ppp/chap_ms.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/demand.o : Lib/lwip/src/netif/ppp/demand.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/eap.o : Lib/lwip/src/netif/ppp/eap.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ecp.o : Lib/lwip/src/netif/ppp/ecp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/eui64.o : Lib/lwip/src/netif/ppp/eui64.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/fsm.o : Lib/lwip/src/netif/ppp/fsm.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ipcp.o : Lib/lwip/src/netif/ppp/ipcp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ipv6cp.o : Lib/lwip/src/netif/ppp/ipv6cp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/lcp.o : Lib/lwip/src/netif/ppp/lcp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/magic.o : Lib/lwip/src/netif/ppp/magic.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/mppe.o : Lib/lwip/src/netif/ppp/mppe.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/multilink.o : Lib/lwip/src/netif/ppp/multilink.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ppp.o : Lib/lwip/src/netif/ppp/ppp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/pppapi.o : Lib/lwip/src/netif/ppp/pppapi.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/pppcrypt.o : Lib/lwip/src/netif/ppp/pppcrypt.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/pppoe.o : Lib/lwip/src/netif/ppp/pppoe.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/pppol2tp.o : Lib/lwip/src/netif/ppp/pppol2tp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/pppos.o : Lib/lwip/src/netif/ppp/pppos.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/upap.o : Lib/lwip/src/netif/ppp/upap.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/utils.o : Lib/lwip/src/netif/ppp/utils.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/vj.o : Lib/lwip/src/netif/ppp/vj.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/arc4.o : Lib/lwip/src/netif/ppp/polarssl/arc4.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/des.o : Lib/lwip/src/netif/ppp/polarssl/des.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/md4.o : Lib/lwip/src/netif/ppp/polarssl/md4.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/md5.o : Lib/lwip/src/netif/ppp/polarssl/md5.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/sha1.o : Lib/lwip/src/netif/ppp/polarssl/sha1.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ModbusASCII.o : Lib/modbus/ModbusASCII.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ModbusMaster.o : Lib/modbus/ModbusMaster.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ModbusMasterHandlerHolding.o : Lib/modbus/ModbusMasterHandlerHolding.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ModbusRTU.o : Lib/modbus/ModbusRTU.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ModbusSlave.o : Lib/modbus/ModbusSlave.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/ModbusSlaveHandlerHolding.o : Lib/modbus/ModbusSlaveHandlerHolding.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)

